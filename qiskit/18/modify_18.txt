1,4d0
< import unittest
< from qiskit import *
< 
< class Test(unittest.TestCase):
6,22c2
<     
<     def test_b18(self):
<         try:
<             if __name__ == "__main__":
<                 backend = Aer.get_backend('statevector_simulator')
<                 qc = QuantumCircuit(2, 2)
<                 qc = QuantumCircuit(2, 2)
<                 qc.h(0)
<                 qc.cx(0, 1)
<                 qc.measure([0,1], [0,1])
<                 result = execute(qc, backend, 100).result()
<                 print(result.get_counts(qc))
<         except TypeError as e:
<             self.assertEqual(type(e), TypeError)
<            
<         else:
<             self.fail('TypeError not raised')
---
> from qiskit import *
24,25c4,12
< if __name__ == '__main__':
<     unittest.main()
---
> if __name__ == "__main__":
>     backend = Aer.get_backend('statevector_simulator')
>     qc = QuantumCircuit(2, 2)
>     qc = QuantumCircuit(2, 2)
>     qc.h(0)
>     qc.cx(0, 1)
>     qc.measure([0,1], [0,1])
>     result = execute(qc, backend, 100).result()
>     print(result.get_counts(qc))
